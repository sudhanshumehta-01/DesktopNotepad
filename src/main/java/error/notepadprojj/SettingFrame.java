/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package error.notepadprojj;

import java.awt.Event;
import java.awt.PopupMenu;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;

/**
 *
 * @author sudha
 */
public class SettingFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame2
     */
    private NoteFrame noteFrame;
    public SettingFrame() {
        initComponents();
        this.setIconImage(new ImageIcon("C:\\Users\\sudha\\Downloads\\button.png").getImage());
        s_magicNoteText.setLineWrap(true);
        File file2 = new File("D:\\condition.txt");
        File file= new File("D:\\myintro.txt");
        if(file.exists()){
            if(file2.exists()){
                boolean magical =  false;
                try {
                    FileInputStream fis2 = new FileInputStream("D:\\condition.txt");
                    DataInputStream dis = new DataInputStream(fis2);
                    magical = dis.readBoolean();
                    boolean simple=dis.readBoolean();
                    try{
                            FileInputStream fis = new FileInputStream("D:\\myintro.txt");
                            int value = 0;
                            while(true){
                                value = fis.read();
                                if(value == -1){
                                    break;
                                }
                                char ch = (char)value;
                                String data = String.valueOf(ch);
                                String oldText = s_magicNoteText.getText();
                                s_magicNoteText.setText(oldText+data);
                            }
                    }
                    catch(IOException ex){
                        ex.getStackTrace();
                    }
                    if(magical){
                        magicalNotepadBtn.setSelected(true);
                        s_magicNoteText.setVisible(true);
                    }
                    else{
                        simpleNotepadBtn.setSelected(true);
                        s_magicNoteText.setVisible(false);
                    }
                
                    
                }
                catch (IOException ex) {
                    Logger.getLogger(NoteFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
        else{
            s_magicNoteText.setVisible(false);
            simpleNotepadBtn.setSelected(true);
        }
        
    }

    SettingFrame(NoteFrame noteFrame) {
        this();
        this.noteFrame = noteFrame;
        //System.out.println("1111111111111"+this.noteFrame);
       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        simpleNotepadBtn = new javax.swing.JRadioButton();
        magicalNotepadBtn = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        s_magicNoteText = new javax.swing.JTextArea();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        simpleNotepadBtn.setText("Simple Notepad");
        simpleNotepadBtn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                simpleNotepadBtnStateChanged(evt);
            }
        });
        simpleNotepadBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                simpleNotepadBtnMouseClicked(evt);
            }
        });
        simpleNotepadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpleNotepadBtnActionPerformed(evt);
            }
        });

        magicalNotepadBtn.setText("Magical Notepad");
        magicalNotepadBtn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                magicalNotepadBtnStateChanged(evt);
            }
        });
        magicalNotepadBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                magicalNotepadBtnMouseClicked(evt);
            }
        });
        magicalNotepadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                magicalNotepadBtnActionPerformed(evt);
            }
        });

        s_magicNoteText.setColumns(20);
        s_magicNoteText.setRows(5);
        s_magicNoteText.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                s_magicNoteTextAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        s_magicNoteText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                s_magicNoteTextKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(s_magicNoteText);

        saveBtn.setText("save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(magicalNotepadBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(simpleNotepadBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelBtn)
                .addGap(30, 30, 30)
                .addComponent(saveBtn)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(simpleNotepadBtn)
                .addGap(18, 18, 18)
                .addComponent(magicalNotepadBtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpleNotepadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpleNotepadBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_simpleNotepadBtnActionPerformed

    private void magicalNotepadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_magicalNotepadBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_magicalNotepadBtnActionPerformed

    private void simpleNotepadBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simpleNotepadBtnMouseClicked
        // TODO add your handling code here:
        
        buttonGroup1.add(simpleNotepadBtn);
        magicalNotepadBtn.setSelected(false);
        s_magicNoteText.setVisible(false);
        
        
    }//GEN-LAST:event_simpleNotepadBtnMouseClicked

    private void magicalNotepadBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_magicalNotepadBtnMouseClicked
        // TODO add your handling code here:
       
        buttonGroup1.add(magicalNotepadBtn);
        simpleNotepadBtn.setSelected(false);
        s_magicNoteText.setVisible(true);

        
    }//GEN-LAST:event_magicalNotepadBtnMouseClicked

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("D:\\condition.txt");
            DataOutputStream dos = new DataOutputStream(fos);
            boolean magical = magicalNotepadBtn.isSelected();
            boolean simpal = simpleNotepadBtn.isSelected();
            dos.writeBoolean(magical);
            dos.writeBoolean(simpal);
            fos.close();
            dos.close();
            
            /*FileInputStream fis = new FileInputStream("D:\\condition.txt");
            DataInputStream dis = new DataInputStream(fis);
            //boolean magical = magicalNotepadBtn.isSelected();
            //boolean simpel = simpleNotepadBtn.isSelected();
            System.out.println("@@@"+dis.readBoolean());
            System.out.println("###"+dis.readBoolean());
            fis.close();
            dis.close();
            */
        } 
        catch (IOException ex) {
            Logger.getLogger(SettingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(magicalNotepadBtn.isSelected()){
            try {
                FileOutputStream fos = new FileOutputStream("D:\\myintro.txt");
                String data = s_magicNoteText.getText();
                char ch = 0;
                for(int i=0;i<data.length();i++)
                {
                    ch = data.charAt(i);
                    fos.write(ch);
                }
            } 
            catch (IOException ex){
                Logger.getLogger(SettingFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        noteFrame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void s_magicNoteTextAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_s_magicNoteTextAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_s_magicNoteTextAncestorAdded

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        NoteFrame notefrm = new NoteFrame();
        notefrm.setVisible(true);
        
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void s_magicNoteTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_s_magicNoteTextKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_s_magicNoteTextKeyTyped

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        NoteFrame noteFrm = new NoteFrame();
        noteFrm.setVisible(true);
        
    }//GEN-LAST:event_formWindowClosing

    private void simpleNotepadBtnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_simpleNotepadBtnStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_simpleNotepadBtnStateChanged

    private void magicalNotepadBtnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_magicalNotepadBtnStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_magicalNotepadBtnStateChanged



    public JRadioButton getMagicalNotepadBtn() {
        return magicalNotepadBtn;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton magicalNotepadBtn;
    private javax.swing.JTextArea s_magicNoteText;
    private javax.swing.JButton saveBtn;
    private javax.swing.JRadioButton simpleNotepadBtn;
    // End of variables declaration//GEN-END:variables
}
