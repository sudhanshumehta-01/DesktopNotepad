/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package error.notepadprojj;

import com.sun.source.tree.BreakTree;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Container;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.Image;
import static java.awt.SystemColor.text;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author sudha
 */
public class NoteFrame extends javax.swing.JFrame {
   
    /** Creates new form NewJFrame */
    public NoteFrame() {
        
        initComponents();
        //  noteText.setLineWrap(wordWrap.isSelected());
        this.setIconImage(new ImageIcon("C:\\Users\\sudha\\Downloads\\notepad_icon_img.jpg").getImage());
        this.setTitle("Notepad");
        File file = new File("D:\\myintro.txt");
        if(file.exists()){
            try {
                fis = new FileInputStream("D:\\myintro.txt");
           
            } 
            catch (IOException ex) {
                Logger.getLogger(NoteFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        noteText = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        open = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        print = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        cut = new javax.swing.JMenuItem();
        copy = new javax.swing.JMenuItem();
        paste = new javax.swing.JMenuItem();
        view = new javax.swing.JMenu();
        wordWrap = new javax.swing.JCheckBoxMenuItem();
        setting = new javax.swing.JMenu();
        calculator = new javax.swing.JMenu();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        noteText.setColumns(20);
        noteText.setRows(5);
        noteText.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                noteTextComponentAdded(evt);
            }
        });
        noteText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                noteTextInputMethodTextChanged(evt);
            }
        });
        noteText.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                noteTextPropertyChange(evt);
            }
        });
        noteText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noteTextKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                noteTextKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(noteText);

        file.setText("File");
        file.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                fileMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        file.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                fileMenuSelected(evt);
            }
        });
        file.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileMouseClicked(evt);
            }
        });
        file.add(jSeparator1);

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        open.setText("Open");
        open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openMouseClicked(evt);
            }
        });
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        file.add(open);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        save.setText("Save");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        file.add(save);

        print.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        print.setText("Print");
        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
        });
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        file.add(print);

        exit.setText("Exit");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        jMenuBar1.add(file);

        edit.setText("Edit");

        cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cut.setText("Cut");
        cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutActionPerformed(evt);
            }
        });
        edit.add(cut);

        copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copy.setText("Copy");
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });
        edit.add(copy);

        paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        paste.setText("Paste");
        paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteActionPerformed(evt);
            }
        });
        edit.add(paste);

        jMenuBar1.add(edit);

        view.setText("View");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        wordWrap.setText("Word wrap");
        wordWrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordWrapActionPerformed(evt);
            }
        });
        view.add(wordWrap);

        jMenuBar1.add(view);

        setting.setText("Setting");
        setting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingMouseClicked(evt);
            }
        });
        setting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingActionPerformed(evt);
            }
        });
        setting.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                settingKeyPressed(evt);
            }
        });
        jMenuBar1.add(setting);

        calculator.setText("Calculator");
        calculator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculatorMouseClicked(evt);
            }
        });
        jMenuBar1.add(calculator);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showSaveDialog(this);
        System.out.println(option);
        if(option == 0)
        {
            File file = fileChooser.getSelectedFile();
            try {
                FileInputStream fis = new FileInputStream(file);
                Scanner scan = new Scanner(fis);
                while (scan.hasNext())
                {
                    String s = String.valueOf(scan.nextLine());
                    noteText.setText(s);
                    this.setTitle(file.getName());
                }
                fis.close();
            } 
            catch (IOException ex) {
                
            }
        }
    }//GEN-LAST:event_openActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        PrinterJob printer = PrinterJob.getPrinterJob();
        boolean print = printer.printDialog();
        if(print){
            try {
                printer.print();
            }
            catch ( Exception PrintException) {
                
            }
        }
    }//GEN-LAST:event_printActionPerformed

    private void fileMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_fileMenuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuKeyPressed

    private void openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_openMouseClicked

    private void fileMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_fileMenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuSelected

    private void fileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_saveMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_exitMouseClicked

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_printMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showSaveDialog(this);
        System.out.println(option);
        if(option == 0)
        {
            File file = fileChooser.getSelectedFile();
            try {
              
                FileOutputStream fos = new FileOutputStream(file);
                String data = noteText.getText();
                char ch = 0;
                for(int i=0;i<data.length();i++)
                {
                    ch = data.charAt(i);
                    fos.write(ch);
                    this.setTitle(file.getName());
                }
                fos.close();
            } catch (IOException ex) {
                
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutActionPerformed
        // TODO add your handling code here:
        noteText.cut();
    }//GEN-LAST:event_cutActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewActionPerformed

    private void wordWrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordWrapActionPerformed
        // TODO add your handling code here:
        noteText.setLineWrap(wordWrap.isSelected());
    }//GEN-LAST:event_wordWrapActionPerformed

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
        // TODO add your handling code here:
        noteText.copy();
    }//GEN-LAST:event_copyActionPerformed

    private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed
        // TODO add your handling code here:
        noteText.paste();
    }//GEN-LAST:event_pasteActionPerformed

    private void settingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingActionPerformed

    private void settingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_settingKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingKeyPressed

    private void settingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingMouseClicked
        // TODO add your handling code here:
        noteText.setText("");
        try {
            fis = new FileInputStream("D:\\myintro.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NoteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        LoginFrame frame1 = new LoginFrame(this);
        this.setVisible(false);
        frame1.setVisible(true);
    }//GEN-LAST:event_settingMouseClicked

    private void noteTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteTextKeyTyped
        // TODO add your handling code here:
        // SettingFrame sFrm = new SettingFrame();
        boolean magical =  false;
        try {
            FileInputStream fis = new FileInputStream("D:\\condition.txt");
            DataInputStream dis = new DataInputStream(fis);
            magical = dis.readBoolean();
            boolean simple=dis.readBoolean();
        } 
        
        catch (IOException ex) {
            Logger.getLogger(NoteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(magical){
            
                //System.out.println(evt.getID()+"|"+evt.getKeyChar()+"|"+evt.getKeyCode());
                evt.consume();
                int value = 0;
                try {
                    value = fis.read();
                    //System.out.println(value);
                    String oldText = noteText.getText();
                    if(value != -1){
                        char ch = (char)value;
                        String data = String.valueOf(ch);
                        noteText.setText(oldText+data);
                    }
                    if(value == -1){
                        fis = new FileInputStream("D:\\myintro.txt");
                        int value2 = fis.read();
                        char ch = (char)value2;
                        String data = String.valueOf(ch);
                        noteText.setText(oldText+data);
                    }
                }
                catch (IOException ex) {
                    Logger.getLogger(NoteFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_noteTextKeyTyped

    private void noteTextPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_noteTextPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_noteTextPropertyChange

    private void noteTextComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_noteTextComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_noteTextComponentAdded

    private void noteTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_noteTextInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_noteTextInputMethodTextChanged

    private void noteTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteTextKeyPressed
        // TODO add your handling code here:
        //System.out.println(evt.getKeyCode()+"|"+(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE));
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            evt.consume();
        }
    }//GEN-LAST:event_noteTextKeyPressed

    private void calculatorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculatorMouseClicked
        // TODO add your handling code here:
        CalculatorFrame calculator = new CalculatorFrame();
        this.setVisible(false);
        calculator.setVisible(true);
    }//GEN-LAST:event_calculatorMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoteFrame().setVisible(true);
            }
        });
        
    }
    private FileInputStream fis;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu calculator;
    private javax.swing.JMenuItem copy;
    private javax.swing.JMenuItem cut;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea noteText;
    private javax.swing.JMenuItem open;
    private javax.swing.JMenuItem paste;
    private javax.swing.JMenuItem print;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenu setting;
    private javax.swing.JMenu view;
    private javax.swing.JCheckBoxMenuItem wordWrap;
    // End of variables declaration//GEN-END:variables

}
